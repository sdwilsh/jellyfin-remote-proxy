---
name: Build Container Image
on: # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - main
      - renovate/**
  push:
    branches:
      - main
      - renovate/**
    tags:
      - '*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_push_image:
    name: Build and push image

    permissions:
      contents: read
      packages: write
      id-token: write

    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        runner:
          - ubuntu-24.04
          - ubuntu-24.04-arm

    steps:
      - name: Setup Platform-Specific Tag
        run: |
          if [[ "${{ matrix.runner }}" == *"arm" ]]; then
            echo "DEFAULT_TAG=${{ github.ref_name }}-arm64" >> ${GITHUB_ENV}
            echo "PLATFORM=linux/arm64" >> ${GITHUB_ENV}
          else
            echo "DEFAULT_TAG=${{ github.ref_name }}-amd64" >> ${GITHUB_ENV}
            echo "PLATFORM=linux/amd64" >> ${GITHUB_ENV}
          fi

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Mount BTRFS for podman storage
        uses: ublue-os/container-storage-action@main

      - name: Image Metadata
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        id: metadata
        with:
          tags: |
            type=raw,value=${{ env.DEFAULT_TAG }}
            type=raw,value=${{ env.DEFAULT_TAG }}.{{date 'YYYYMMDD'}}
            type=sha,enable=${{ github.event_name == 'pull_request' }}
            type=ref,event=pr

      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@7a95fa7ee0f02d552a32753e7414641a04307056 # v2
        with:
          containerfiles: Containerfile
          image: ${{ github.repository }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          oci: false
          platforms: ${{ env.PLATFORM }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        if: |
          github.event_name != 'pull_request' &&
          (
              github.ref == format('refs/heads/{0}', github.event.repository.default_branch) ||
              startswith(github.ref, 'refs/tags/')
          )
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2
        if: |
          github.event_name != 'pull_request' &&
          (
              github.ref == format('refs/heads/{0}', github.event.repository.default_branch) ||
              startswith(github.ref, 'refs/tags/')
          )
        id: push
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          registry: ghcr.io
          image: ${{ github.repository }}
          tags: ${{ steps.metadata.outputs.tags }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

  build_push_manifest:
    if: |
      github.event_name != 'pull_request' &&
      (
        github.ref == format('refs/heads/{0}', github.event.repository.default_branch) ||
        startswith(github.ref, 'refs/tags/')
      )

    name: Build and push manifest
    needs:
      - build_push_image

    permissions:
      contents: read
      packages: write
      id-token: write

    runs-on: ubuntu-24.04

    steps:
      - name: Image Metadata
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        id: metadata
        with:
          tags: |
            type=raw,value=${{ github.ref_name }}
            type=sha,enable=${{ github.event_name == 'pull_request' }}
            type=ref,event=pr

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Manifest
        run: |
          IMAGE_FULL="ghcr.io/${{ github.repository }}"
          DATE=$(date -u +%Y%m%d)
          for tag in ${{ steps.metadata.outputs.tags }}; do
            podman manifest create ${IMAGE_FULL}:$tag
            podman manifest add $IMAGE_FULL:$tag docker://$IMAGE_FULL:${{ github.ref_name }}-amd64.$DATE
            podman manifest add $IMAGE_FULL:$tag docker://$IMAGE_FULL:${{ github.ref_name }}-arm64.$DATE
          done

      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2
        id: push
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          registry: ghcr.io
          image: ${{ github.repository }}
          tags: ${{ steps.metadata.outputs.tags }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
